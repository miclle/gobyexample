<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Go by Example: URL Parsing</title>
    <link rel=stylesheet href="site.css">
  </head>
  <body>
    <div class="example" id="url-parsing">

      <h2>URL Parsing</h2>

      
      <div class="seg">
        
          <div class="docs"><p>URLs provide a <a href="http://adam.heroku.com/past/2010/3/30/urls_are_the_uniform_way_to_locate_resources/">uniform way to locate resources</a>.
Here&rsquo;s how to parse URLs in Go.</p>
</div>
          <div class="code empty leading"></div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>
</div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
<span class="kn">import</span> <span class="s">&quot;net&quot;</span>
<span class="kn">import</span> <span class="s">&quot;net/url&quot;</span>
</pre></div>
</div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>
</div>
        
          <div class="docs"><p>We&rsquo;ll parse this example URL, which includes a
scheme, authentication info, host, port, path,
query params, and query fragment.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="nx">s</span> <span class="o">:=</span> <span class="s">&quot;postgres://user:pass@host.com:5432/path?k=v#f&quot;</span>
</pre></div>
</div>
        
          <div class="docs"><p>Parse the URL and ensure there are no errors.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="nx">u</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">url</span><span class="p">.</span><span class="nx">Parse</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span>
    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
        <span class="nb">panic</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
    <span class="p">}</span>
</pre></div>
</div>
        
          <div class="docs"><p>Accessing the scheme is straightforward.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">Scheme</span><span class="p">)</span>
</pre></div>
</div>
        
          <div class="docs"><p><code>User</code> contains all authentication info; call
<code>Username</code> and <code>Password</code> on this for individual
values.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">User</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">User</span><span class="p">.</span><span class="nx">Username</span><span class="p">())</span>
    <span class="nx">p</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">u</span><span class="p">.</span><span class="nx">User</span><span class="p">.</span><span class="nx">Password</span><span class="p">()</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span>
</pre></div>
</div>
        
          <div class="docs"><p>The <code>Host</code> contains both the hostname and the port,
if present. Use <code>SplitHostPort</code> to extract them.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">Host</span><span class="p">)</span>
    <span class="nx">host</span><span class="p">,</span> <span class="nx">port</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">net</span><span class="p">.</span><span class="nx">SplitHostPort</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">Host</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">host</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">port</span><span class="p">)</span>
</pre></div>
</div>
        
          <div class="docs"><p>Here we extract the <code>path</code> and the fragment after
the <code>#</code>.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">Path</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">Fragment</span><span class="p">)</span>
</pre></div>
</div>
        
          <div class="docs"><p>To get query params in a string of <code>k=v</code> format,
use <code>RawQuery</code>. You can also parse query params
into a map. The parsed query param maps are from
strings to slices of strings, so index into <code>[0]</code>
if you only want the first value.</p>
</div>
          <div class="code"><div class="highlight"><pre>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">RawQuery</span><span class="p">)</span>
    <span class="nx">m</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">url</span><span class="p">.</span><span class="nx">ParseQuery</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">RawQuery</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="s">&quot;k&quot;</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
<span class="p">}</span>
</pre></div>
</div>
        
      </div>
      
      <div class="seg">
        
          <div class="docs"><p>Running our URL parsing program shows all the different
pieces that we extracted.</p>
</div>
          <div class="code"><div class="highlight"><pre><span class="gp">$</span> go run url-parsing.go 
<span class="go">postgres</span>
<span class="go">user:pass</span>
<span class="go">user</span>
<span class="go">pass</span>
<span class="go">host.com:5432</span>
<span class="go">host.com</span>
<span class="go">5432</span>
<span class="go">/path</span>
<span class="go">f</span>
<span class="go">k=v</span>
<span class="go">map[k:[v]]</span>
<span class="go">v</span>
</pre></div>
</div>
        
      </div>
      

      
      <p class="next">Next example: <a href="sha1-hashes">SHA1 Hashes</a></p>
      

      <p class="footer">
        <span>
          by <a href="https://twitter.com/mmcgrana">@mmcgrana</a>
        </span>
        <a href="mailto:mmcgrana@gmail.com">feedback</a> |
        <a href="https://github.com/mmcgrana/gobyexample/blob/master/examples/url-parsing">source</a> |
        <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
      </p>

    </div>

    <script type="text/javascript">
      if (window.location.host == "gobyexample.com") {
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-34996217-1']);
        _gaq.push(['_trackPageview']);
        (function() {
          var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
          ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
          var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
      }
    </script>
  </body>
</html>

<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Go by Example: Channels</title>
    <link rel=stylesheet href="site.css">
  </head>
  <body>
    <div class="example" id="channels">

      <h2>Channels</h2>

      
      <div class="seg">
        
          <div class="docs"><p><em>Channels</em> are the pipes that connect concurrent
goroutines. You can send values into channels from one
goroutine and receive those values into another
goroutine.</p>
</div>
          <div class="code empty leading"></div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>
</div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>
</div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>
</div>
        
          <div class="docs"><p>Create a new channel with <code>make(chan val-type)</code>.
Channels are typed by the values they convey.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="nx">messages</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">string</span><span class="p">)</span>
</pre></div>
</div>
        
          <div class="docs"><p><em>Send</em> a value into a channel using the <code>channel &lt;-</code>
syntax. Here we send <code>&quot;ping&quot;</code>  to the <code>messages</code>
channel we made above, from a new goroutine.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span> <span class="nx">messages</span> <span class="o">&lt;-</span> <span class="s">&quot;ping&quot;</span> <span class="p">}()</span>
</pre></div>
</div>
        
          <div class="docs"><p>The <code>&lt;-channel</code> syntax <em>receives</em> a value from the
channel. Here we&rsquo;ll receive the <code>&quot;ping&quot;</code> message
we sent above and print it out.</p>
</div>
          <div class="code"><div class="highlight"><pre>    <span class="nx">msg</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">messages</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">msg</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>
</div>
        
      </div>
      
      <div class="seg">
        
          <div class="docs"><p>When we run the program the <code>&quot;ping&quot;</code> message is
successfully passed from one goroutine to another via
our channel.</p>
</div>
          <div class="code leading"><div class="highlight"><pre><span class="gp">$</span> go run channels.go 
<span class="go">ping</span>
</pre></div>
</div>
        
          <div class="docs"><p>By default sends and receives block until both the
sender and receiver are ready. This property allowed
us to wait at the end of our program for the <code>&quot;ping&quot;</code>
message without having to use any other synchronization.</p>
</div>
          <div class="code empty"></div>
        
      </div>
      

      
      <p class="next">Next example: <a href="channel-buffering">Channel Buffering</a></p>
      

      <p class="footer">
        <span>
          by <a href="https://twitter.com/mmcgrana">@mmcgrana</a>
        </span>
        <a href="mailto:mmcgrana@gmail.com">feedback</a> |
        <a href="https://github.com/mmcgrana/gobyexample/blob/master/examples/channels">source</a> |
        <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
      </p>

    </div>

    <script type="text/javascript">
      if (window.location.host == "gobyexample.com") {
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-34996217-1']);
        _gaq.push(['_trackPageview']);
        (function() {
          var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
          ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
          var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
      }
    </script>
  </body>
</html>

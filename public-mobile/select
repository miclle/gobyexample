<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Go by Example: Select</title>
    <link rel=stylesheet href="site.css">
  </head>
  <body>
    <div class="example" id="select">

      <h2>Select</h2>

      
      <div class="seg">
        
          <div class="docs"><p>Go&rsquo;s <em>select</em> lets you wait on multiple channel
operations. Combining goroutines and channels with
select is a powerful feature of Go.</p>
</div>
          <div class="code empty leading"></div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>
</div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;time&quot;</span>
<span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>
</div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>
</div>
        
          <div class="docs"><p>For our example we&rsquo;ll select across two channels.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="nx">c1</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">string</span><span class="p">)</span>
    <span class="nx">c2</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">string</span><span class="p">)</span>
</pre></div>
</div>
        
          <div class="docs"><p>Each channel will receive a value after some amount
of time, to simulate e.g. blocking RPC operations
executing in concurrent goroutines.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
        <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="nx">time</span><span class="p">.</span><span class="nx">Second</span> <span class="o">*</span> <span class="mi">1</span><span class="p">)</span>
        <span class="nx">c1</span> <span class="o">&lt;-</span> <span class="s">&quot;one&quot;</span>
    <span class="p">}()</span>
    <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
        <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="nx">time</span><span class="p">.</span><span class="nx">Second</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>
        <span class="nx">c2</span> <span class="o">&lt;-</span> <span class="s">&quot;two&quot;</span>
    <span class="p">}()</span>
</pre></div>
</div>
        
          <div class="docs"><p>We&rsquo;ll use <code>select</code> to await both of these values
simultaneously, printing each one as it arrives.</p>
</div>
          <div class="code"><div class="highlight"><pre>    <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">2</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
        <span class="k">select</span> <span class="p">{</span>
        <span class="k">case</span> <span class="nx">msg1</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">c1</span><span class="p">:</span>
            <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;received&quot;</span><span class="p">,</span> <span class="nx">msg1</span><span class="p">)</span>
        <span class="k">case</span> <span class="nx">msg2</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">c2</span><span class="p">:</span>
            <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;received&quot;</span><span class="p">,</span> <span class="nx">msg2</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
        
      </div>
      
      <div class="seg">
        
          <div class="docs"><p>We receive the values <code>&quot;one&quot;</code> and then <code>&quot;two&quot;</code> as
expected.</p>
</div>
          <div class="code leading"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">time </span>go run <span class="k">select</span>.go 
<span class="go">received one</span>
<span class="go">received two</span>
</pre></div>
</div>
        
          <div class="docs"><p>Note that the total execution time is only ~2 seconds
since both the 1 and 2 second <code>Sleeps</code> execute
concurrently.</p>
</div>
          <div class="code"><div class="highlight"><pre><span class="go">real	0m2.245s</span>
</pre></div>
</div>
        
      </div>
      

      
      <p class="next">Next example: <a href="timeouts">Timeouts</a></p>
      

      <p class="footer">
        <span>
          by <a href="https://twitter.com/mmcgrana">@mmcgrana</a>
        </span>
        <a href="mailto:mmcgrana@gmail.com">feedback</a> |
        <a href="https://github.com/mmcgrana/gobyexample/blob/master/examples/select">source</a> |
        <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
      </p>

    </div>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-77741685-1', 'auto');
      ga('send', 'pageview');

    </script>
  </body>
</html>

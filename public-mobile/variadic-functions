<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Go by Example: Variadic Functions</title>
    <link rel=stylesheet href="site.css">
  </head>
  <body>
    <div class="example" id="variadic-functions">

      <h2>Variadic Functions</h2>

      
      <div class="seg">
        
          <div class="docs"><p><a href="http://en.wikipedia.org/wiki/Variadic_function"><em>Variadic functions</em></a>
can be called with any number of trailing arguments.
For example, <code>fmt.Println</code> is a common variadic
function.</p>
</div>
          <div class="code empty leading"></div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>
</div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>
</div>
        
          <div class="docs"><p>Here&rsquo;s a function that will take an arbitrary number
of <code>ints</code> as arguments.</p>
</div>
          <div class="code leading"><div class="highlight"><pre><span class="kd">func</span> <span class="nx">sum</span><span class="p">(</span><span class="nx">nums</span> <span class="o">...</span><span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Print</span><span class="p">(</span><span class="nx">nums</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="p">)</span>
    <span class="nx">total</span> <span class="o">:=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">num</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">nums</span> <span class="p">{</span>
        <span class="nx">total</span> <span class="o">+=</span> <span class="nx">num</span>
    <span class="p">}</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">total</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>
</div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>
</div>
        
          <div class="docs"><p>Variadic functions can be called in the usual way
with individual arguments.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="nx">sum</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
    <span class="nx">sum</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</pre></div>
</div>
        
          <div class="docs"><p>If you already have multiple args in a slice,
apply them to a variadic function using
<code>func(slice...)</code> like this.</p>
</div>
          <div class="code"><div class="highlight"><pre>    <span class="nx">nums</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">int</span><span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">}</span>
    <span class="nx">sum</span><span class="p">(</span><span class="nx">nums</span><span class="o">...</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>
</div>
        
      </div>
      
      <div class="seg">
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="gp">$</span> go run variadic-functions.go 
<span class="go">[1 2] 3</span>
<span class="go">[1 2 3] 6</span>
<span class="go">[1 2 3 4] 10</span>
</pre></div>
</div>
        
          <div class="docs"><p>Another key aspect of functions in Go is their ability
to form closures, which we&rsquo;ll look at next.</p>
</div>
          <div class="code empty"></div>
        
      </div>
      

      
      <p class="next">Next example: <a href="closures">Closures</a></p>
      

      <p class="footer">
        <span>
          by <a href="https://twitter.com/mmcgrana">@mmcgrana</a>
        </span>
        <a href="mailto:mmcgrana@gmail.com">feedback</a> |
        <a href="https://github.com/mmcgrana/gobyexample/blob/master/examples/variadic-functions">source</a> |
        <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
      </p>

    </div>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-77741685-1', 'auto');
      ga('send', 'pageview');

    </script>
  </body>
</html>

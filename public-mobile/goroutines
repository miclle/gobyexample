<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Go by Example: Goroutines</title>
    <link rel=stylesheet href="site.css">
  </head>
  <body>
    <div class="example" id="goroutines">

      <h2>Goroutines</h2>

      
      <div class="seg">
        
          <div class="docs"><p>A <em>goroutine</em> is a lightweight thread of execution.</p>
</div>
          <div class="code empty leading"></div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>
</div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>
</div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kd">func</span> <span class="nx">f</span><span class="p">(</span><span class="nx">from</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">from</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
        
          <div class="docs"></div>
          <div class="code leading"><div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>
</div>
        
          <div class="docs"><p>Suppose we have a function call <code>f(s)</code>. Here&rsquo;s how
we&rsquo;d call that in the usual way, running it
synchronously.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="nx">f</span><span class="p">(</span><span class="s">&quot;direct&quot;</span><span class="p">)</span>
</pre></div>
</div>
        
          <div class="docs"><p>To invoke this function in a goroutine, use
<code>go f(s)</code>. This new goroutine will execute
concurrently with the calling one.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="k">go</span> <span class="nx">f</span><span class="p">(</span><span class="s">&quot;goroutine&quot;</span><span class="p">)</span>
</pre></div>
</div>
        
          <div class="docs"><p>You can also start a goroutine for an anonymous
function call.</p>
</div>
          <div class="code leading"><div class="highlight"><pre>    <span class="k">go</span> <span class="kd">func</span><span class="p">(</span><span class="nx">msg</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">msg</span><span class="p">)</span>
    <span class="p">}(</span><span class="s">&quot;going&quot;</span><span class="p">)</span>
</pre></div>
</div>
        
          <div class="docs"><p>Our two function calls are running asynchronously in
separate goroutines now, so execution falls through
to here. This <code>Scanln</code> code requires we press a key
before the program exits.</p>
</div>
          <div class="code"><div class="highlight"><pre>    <span class="kd">var</span> <span class="nx">input</span> <span class="kt">string</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Scanln</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">input</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;done&quot;</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>
</div>
        
      </div>
      
      <div class="seg">
        
          <div class="docs"><p>When we run this program, we see the output of the
blocking call first, then the interleaved output of the
two gouroutines. This interleaving reflects the
goroutines being run concurrently by the Go runtime.</p>
</div>
          <div class="code leading"><div class="highlight"><pre><span class="gp">$</span> go run goroutines.go
<span class="go">direct : 0</span>
<span class="go">direct : 1</span>
<span class="go">direct : 2</span>
<span class="go">goroutine : 0</span>
<span class="go">going</span>
<span class="go">goroutine : 1</span>
<span class="go">goroutine : 2</span>
<span class="go">&lt;enter&gt;</span>
<span class="go">done</span>
</pre></div>
</div>
        
          <div class="docs"><p>Next we&rsquo;ll look at a complement to goroutines in
concurrent Go programs: channels.</p>
</div>
          <div class="code empty"></div>
        
      </div>
      

      
      <p class="next">Next example: <a href="channels">Channels</a></p>
      

      <p class="footer">
        <span>
          by <a href="https://twitter.com/mmcgrana">@mmcgrana</a>
        </span>
        <a href="mailto:mmcgrana@gmail.com">feedback</a> |
        <a href="https://github.com/mmcgrana/gobyexample/blob/master/examples/goroutines">source</a> |
        <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
      </p>

    </div>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-77741685-1', 'auto');
      ga('send', 'pageview');

    </script>
  </body>
</html>
